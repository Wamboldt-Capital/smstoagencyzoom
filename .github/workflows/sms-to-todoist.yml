name: SMS â†’ Todoist

on:
  workflow_dispatch: {}          # manual run
  schedule:
    - cron: "*/30 * * * *"       # every 30 minutes (adjust as you like)

permissions:
  contents: write                # needed to commit the cache file

concurrency:
  group: sms-to-todoist
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create .env (optional)
        run: |
          cat > .env <<'ENV'
          # If you prefer .env over secrets, you can move values here.
          # Leaving empty defers to GitHub Secrets below.
          AZ_BASE=
          AZ_THREADS_PAGE_SIZE=
          AZ_MSGS_PAGE_SIZE=
          AZ_INBOUND_ONLY=
          AZ_SINCE_ISO=
          REQUEST_TIMEOUT_SECONDS=
          DRY_RUN=
          TODOIST_PROJECT_ID=
          ENV
        shell: bash

      - name: Run sms_to_todoist.py
        env:
          # Required
          AGENCY_ZOOM_USERNAME: ${{ secrets.AGENCY_ZOOM_USERNAME }}
          AGENCY_ZOOM_PASSWORD: ${{ secrets.AGENCY_ZOOM_PASSWORD }}
          TODOIST_API_TOKEN:    ${{ secrets.TODOIST_API_TOKEN }}
          # Optional (override defaults)
          TODOIST_PROJECT_ID:   ${{ secrets.TODOIST_PROJECT_ID }}
          AZ_BASE:               ${{ secrets.AZ_BASE }}
          AZ_THREADS_PAGE_SIZE:  ${{ secrets.AZ_THREADS_PAGE_SIZE }}
          AZ_MSGS_PAGE_SIZE:     ${{ secrets.AZ_MSGS_PAGE_SIZE }}
          AZ_INBOUND_ONLY:       ${{ secrets.AZ_INBOUND_ONLY }}        # "1" to only process inbound messages
          AZ_SINCE_ISO:          ${{ secrets.AZ_SINCE_ISO }}          # e.g. 2025-10-01T00:00:00Z
          REQUEST_TIMEOUT_SECONDS: ${{ secrets.REQUEST_TIMEOUT_SECONDS }}
          DRY_RUN:               ${{ secrets.DRY_RUN }}                # "1" to test without creating tasks
          DEBUG:                 ${{ secrets.DEBUG }}                  # "1" to print debug
        run: |
          set -euo pipefail
          python sms_to_todoist.py

      - name: Commit output files (if changed)
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add cache and output files
          git add .sms_to_todoist_cache.json sms_messages.txt sms_messages.json || true

          if ! git diff --cached --quiet; then
            git commit -m "chore: update SMS cache and export file"
            git push
          else
            echo "No changes to commit."
          fi
